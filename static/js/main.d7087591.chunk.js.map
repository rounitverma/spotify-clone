{"version":3,"sources":["spotify.js","Login.js","DataLayer.js","Header.js","SongRow.js","Body.js","SidebarOption.js","Sidebar.js","Footer.js","Player.js","App.js","reportWebVitals.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","name","artists","map","artist","Body","spotify","discover_weekly","description","fontSize","tracks","items","item","SidebarOption","title","Icon","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","playlist","Footer","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","state","action","console","log","ReactDOM","render","StrictMode","playing","document","getElementById"],"mappings":"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","file":"static/js/main.d7087591.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"http://localhost:3000\";\r\n\r\nconst clientId = \"f31a3d56b5134abf84fa2bbb0cbdea64\";\r\n\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n    return window.location.hash.substring(1).split('&').reduce((initial, item) => {\r\n        let parts = item.split('=');\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n        return initial;\r\n    }, {});\r\n}\r\n\r\nexport const loginUrl =\r\n  `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { loginUrl } from './spotify';\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className=\"login\">\r\n            \r\n            <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\" />\r\n            <a href={loginUrl}>Login with Spotify</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { createContext, useContext, useReducer } from 'react'\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Avatar } from '@mui/material';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nfunction Header() {\r\n    const [{ user }, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"header_left\">\r\n                <SearchIcon />\r\n                <input placeholder=\"Search for Artists, Songs or Podcasts\" type=\"text\" />\r\n\r\n            </div>\r\n\r\n            <div className=\"header_right\">\r\n                <Avatar src={user?.images[0]?.url} alt=\"user?.display_name\" />\r\n                <h4>{user?.display_name}</h4>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './SongRow.css'\r\n\r\nfunction SongRow({ track = \"test\" }) {\r\n    return (\r\n        <div className=\"songRow\">\r\n            <img className=\"songRow_album\" src={track.album.images[0].url} alt=\"\" />\r\n            <div className=\"songRow_info\">\r\n                <h1>{track.name}</h1>\r\n                <p>{track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n                {track.album.name}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongRow\r\n","import React from 'react'\r\nimport './Body.css';\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport Header from './Header';\r\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport SongRow from './SongRow';\r\n\r\nfunction Body({ spotify }) {\r\n    const[{ discover_weekly }, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className=\"body\">\r\n            <Header spotify={spotify} />\r\n\r\n            <div className=\"body_info\">\r\n                <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n                <div className=\"body_infoText\">\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>Discover Weekly</h2>\r\n                    <p>{discover_weekly?.description}</p>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"body_songs\">\r\n                <div className=\"body_icons\">\r\n                    <PlayCircleFilledIcon className=\"body_shuffle\" />\r\n                    <FavoriteIcon fontSize=\"large\" />\r\n                    <MoreHorizIcon />\r\n                </div>\r\n\r\n                \r\n                {discover_weekly?.tracks.items.map(item => (\r\n                    <SongRow track={item.track} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;\r\n","import React from 'react'\r\nimport './SidebarOption.css'\r\n\r\nfunction SidebarOption({ title, Icon }) {\r\n    return (\r\n        <div className=\"sidebarOption\">\r\n            {Icon && <Icon className=\"sidebarOption_icon\" /> }\r\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import React from 'react';\r\nimport './Sidebar.css';\r\nimport SidebarOption from './SidebarOption';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\n\r\n\r\nfunction Sidebar() {\r\n    const [{ playlists }, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <img className=\"sidebar_logo\" src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"spotify-logo\"/>\r\n            <SidebarOption Icon={HomeIcon} title=\"Home\" />\r\n            <SidebarOption Icon={SearchIcon} title=\"Search\" />\r\n            <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\r\n            \r\n            <br />\r\n            <strong className=\"sidebar_title\">PLAYLISTS</strong>\r\n            <hr />\r\n\r\n            {playlists?.items?.map(playlist => (\r\n                <SidebarOption title={playlist.name} />\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react';\r\nimport './Footer.css';\r\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\r\nimport RepeatIcon from '@mui/icons-material/Repeat';\r\n// import { Grid, Slider } from '@material-ui/core';\r\nimport Slider from '@mui/material/Slider';\r\nimport Grid from '@mui/material/Grid';\r\nimport VolumeDownIcon from '@mui/icons-material/VolumeDown';\r\nimport PlaylistPlayIcon from '@mui/icons-material/PlaylistPlay';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer_left\">\r\n                <img className=\"footer_albumLogo\" src=\"https://media.gettyimages.com/photos/indias-mahendra-singh-dhoni-runs-on-the-pitch-during-the-2019-cricket-picture-id1151430063?s=612x612\" alt=\"\" />\r\n                <div className=\"footer_songInfo\">\r\n                    <h4>Yeah!</h4>\r\n                    <p>Usher</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"footer_center\">\r\n                <ShuffleIcon className=\"footer_green\" />\r\n                <SkipPreviousIcon className=\"footer_icon\" />\r\n                <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer_icon\" />\r\n                <SkipNextIcon className=\"footer_icon\" />\r\n                <RepeatIcon className=\"footer_green\" />\r\n\r\n            </div>\r\n\r\n            <div className=\"footer_right\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <PlaylistPlayIcon />\r\n\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <VolumeDownIcon />\r\n\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Slider />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport Body from './Body';\r\nimport \"./Player.css\";\r\nimport Sidebar from './Sidebar';\r\nimport Footer from './Footer';\r\n\r\n\r\nfunction Player({ spotify }) {\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"player_body\">\r\n                <Sidebar />\r\n                <Body spotify={spotify} />\r\n\r\n            </div>\r\n            \r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  \n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n\n    const _token = hash.access_token;\n\n    if(_token) {\n\n      dispatch ({\n        type: 'SET_TOKEN',\n        token: _token,\n      })\n      \n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist('4mTqYJWUnUufXvCCeE9WjM').then(response => \n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n\n      );\n    }\n\n    \n\n\n  }, []);\n\n    \n  return (\n    <div className=\"app\">\n      {\n        token ? (\n          <Player spotify={spotify} />\n        ) : (\n          <Login />\n\n        )\n      }\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","export const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    playing: false,\r\n    item: null,\r\n    // token: \"37i9dQZEVXcVJEUmNXYmQV\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n\r\n    switch(action.type){\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        \r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n\r\n        case 'SET_PLAYLISTS':\r\n            return {\r\n                ...state,\r\n                playlists: action.playlists,\r\n            };\r\n\r\n        case 'SET_DISCOVER_WEEKLY':\r\n            return {\r\n                ...state,\r\n                discover_weekly: action.discover_weekly,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport { DataLayer } from \"./DataLayer\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}